{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x853cf5002865C634Ca3Bab2BC7b46A23E7C22F79",
    "txHash": "0xd6067acee2af82a6927b3e42ddea50c4cd6e4f40a2bc3af47a18324bf6aeda24",
    "deployTransaction": {
      "hash": "0xd6067acee2af82a6927b3e42ddea50c4cd6e4f40a2bc3af47a18324bf6aeda24",
      "type": 0,
      "accessList": null,
      "blockHash": null,
      "blockNumber": null,
      "transactionIndex": null,
      "confirmations": 0,
      "from": "0x864e90222f99a70aeECa036Ffc7d12cC4b3313B4",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x012a05f200"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x075da0"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 44,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xe03cddc6c571a12ee3ebd2b8161aa3d81b5b0ed533208fe57f258f086e2a9edf",
      "s": "0x3e263abcc39f525bdd17d5ae502b606835b0f4a50891ddf7cc6ca28b8870db61",
      "v": 147,
      "creates": "0x853cf5002865C634Ca3Bab2BC7b46A23E7C22F79",
      "chainId": 56
    }
  },
  "proxies": [
    {
      "address": "0xEb85Af63fb38eFa97AccaAe2c66F4b3636a435E9",
      "txHash": "0x8a8eade8b1472aa3e5269333aad2a938d2cf31ec01158b057321bcf908f8f433",
      "kind": "transparent"
    },
    {
      "address": "0x6B5C31796d7cff0512261560d9CdBedE6088dBAf",
      "txHash": "0x31f28b6c13dacc56e41befefdfa7c94f7de244c619e415ab0b761c1b7e4f1b65",
      "kind": "transparent"
    },
    {
      "address": "0x327b9359ab1400355cF687c23e23F3cfd127bf94",
      "txHash": "0x3cac832d518ce1a3ebac9cbf69cfe6c17770e52c7664340d5319e02c5817a919",
      "kind": "transparent"
    },
    {
      "address": "0x1815ed0BD3efB14fbA554c02FEfc307Cc720c7A5",
      "txHash": "0x4bbbc0aa093dc05ae6fbf7379023d44603c95416edeb78b2db0579445f645420",
      "kind": "transparent"
    },
    {
      "address": "0xcD2d528E9a7df01D2c7ddc245DB15F809eF14544",
      "txHash": "0x3ee5b77cfb84fc81dd2cdfd33f60a1627571f530d6151c714f5b9b926240214a",
      "kind": "transparent"
    },
    {
      "address": "0x6D05ff9365609be3c8bF2cf905Aa9dDBBa7b7E60",
      "txHash": "0x6d5e982e1992fc4c3299d7e1e74eddf354c66386109d28285aaf52667eaba759",
      "kind": "transparent"
    },
    {
      "address": "0xE65A3a78804f1fd2bA0cC1FD814E429A0642b783",
      "txHash": "0xb8a22a35be0200f683460fa5e55200c6f74abe87075fe24020e2eae30561def2",
      "kind": "transparent"
    },
    {
      "address": "0xa66Df4dEB77Ec5c87dA067B27c90e4D42FD24E91",
      "txHash": "0x1e59bc06e396adcc6e052c8a0d4a90e9d28ded5ce6a971badd001b2397f72e43",
      "kind": "transparent"
    },
    {
      "address": "0xc0B8c7e2cB9bA35F160F13F2be4804062FAd365B",
      "txHash": "0xa9826d99db13c3fb7ce409aa6f0d3dee4ff611d5dd751e8e2ea3a35b5e93473c",
      "kind": "transparent"
    },
    {
      "address": "0x11A250AE3b15Bab026B03b97b0e4d01F3aC03477",
      "txHash": "0xace352d76d43d600ce6650eb7ba569f9e6ca433cfd9481069f04b2510a1669de",
      "kind": "transparent"
    }
  ],
  "impls": {
    "85a9bfc7ef819540fce7d3787ed31ec31dbf9cf58d600bce249f23e5b7301eac": {
      "address": "0x46988CEE4407334864d1b83e15802e2f861884bB",
      "txHash": "0x2e5c1fc2012e51a245fa314ddbe79a3a178246274f23bfb298d935fbc5aada0b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MasterBarista",
            "label": "latte",
            "type": "t_contract(ILATTE)15214",
            "src": "contracts/farm/MasterBarista.sol:41"
          },
          {
            "contract": "MasterBarista",
            "label": "bean",
            "type": "t_contract(IBeanBag)15121",
            "src": "contracts/farm/MasterBarista.sol:43"
          },
          {
            "contract": "MasterBarista",
            "label": "devAddr",
            "type": "t_address",
            "src": "contracts/farm/MasterBarista.sol:45"
          },
          {
            "contract": "MasterBarista",
            "label": "devFeeBps",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:46"
          },
          {
            "contract": "MasterBarista",
            "label": "lattePerBlock",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:48"
          },
          {
            "contract": "MasterBarista",
            "label": "bonusMultiplier",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:50"
          },
          {
            "contract": "MasterBarista",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:52"
          },
          {
            "contract": "MasterBarista",
            "label": "bonusLockUpBps",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:54"
          },
          {
            "contract": "MasterBarista",
            "label": "pools",
            "type": "t_struct(List)15385_storage",
            "src": "contracts/farm/MasterBarista.sol:59"
          },
          {
            "contract": "MasterBarista",
            "label": "poolInfo",
            "type": "t_mapping(t_address,t_struct(PoolInfo)12475_storage)",
            "src": "contracts/farm/MasterBarista.sol:61"
          },
          {
            "contract": "MasterBarista",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)12464_storage))",
            "src": "contracts/farm/MasterBarista.sol:63"
          },
          {
            "contract": "MasterBarista",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:65"
          },
          {
            "contract": "MasterBarista",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:67"
          },
          {
            "contract": "MasterBarista",
            "label": "stakeTokenCallerAllowancePool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/farm/MasterBarista.sol:70"
          },
          {
            "contract": "MasterBarista",
            "label": "stakeTokenCallerContracts",
            "type": "t_mapping(t_address,t_struct(List)15385_storage)",
            "src": "contracts/farm/MasterBarista.sol:73"
          }
        ],
        "types": {
          "t_contract(ILATTE)15214": {
            "label": "contract ILATTE"
          },
          "t_contract(IBeanBag)15121": {
            "label": "contract IBeanBag"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(List)15385_storage": {
            "label": "struct LinkList.List",
            "members": [
              {
                "label": "llSize",
                "type": "t_uint256"
              },
              {
                "label": "next",
                "type": "t_mapping(t_address,t_address)"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(PoolInfo)12475_storage)": {
            "label": "mapping(address => struct MasterBarista.PoolInfo)"
          },
          "t_struct(PoolInfo)12475_storage": {
            "label": "struct MasterBarista.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accLattePerShare",
                "type": "t_uint256"
              },
              {
                "label": "accLattePerShareTilBonusEnd",
                "type": "t_uint256"
              },
              {
                "label": "allocBps",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)12464_storage))": {
            "label": "mapping(address => mapping(address => struct MasterBarista.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)12464_storage)": {
            "label": "mapping(address => struct MasterBarista.UserInfo)"
          },
          "t_struct(UserInfo)12464_storage": {
            "label": "struct MasterBarista.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "bonusDebt",
                "type": "t_uint256"
              },
              {
                "label": "fundedBy",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(List)15385_storage)": {
            "label": "mapping(address => struct LinkList.List)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "bcbfbdb8129973c7cfaaacfb9f771eb7057b0a46546df5e28a183eb53e911447": {
      "address": "0x5E8F56e5812f10B819c1649c1f6680eA82f29DF2",
      "txHash": "0xd9231586b02508bc114f4ca72af9ac1ddd0180aef374e54faca324e938842784",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BoosterConfig",
            "label": "energyInfo",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(BoosterEnergyInfo)19975_storage))",
            "src": "contracts/nft/BoosterConfig.sol:46"
          },
          {
            "contract": "BoosterConfig",
            "label": "boosterNftAllowance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "src": "contracts/nft/BoosterConfig.sol:48"
          },
          {
            "contract": "BoosterConfig",
            "label": "stakeTokenAllowance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/nft/BoosterConfig.sol:50"
          },
          {
            "contract": "BoosterConfig",
            "label": "callerAllowance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/nft/BoosterConfig.sol:52"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(BoosterEnergyInfo)19975_storage))": {
            "label": "mapping(address => mapping(uint256 => struct BoosterConfig.BoosterEnergyInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(BoosterEnergyInfo)19975_storage)": {
            "label": "mapping(uint256 => struct BoosterConfig.BoosterEnergyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(BoosterEnergyInfo)19975_storage": {
            "label": "struct BoosterConfig.BoosterEnergyInfo",
            "members": [
              {
                "label": "maxEnergy",
                "type": "t_uint256"
              },
              {
                "label": "currentEnergy",
                "type": "t_uint256"
              },
              {
                "label": "boostBps",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0935ff731f3aaca542d2ac28b0235e14e91fecd61f7bb22dc5187cc5cfe073b6": {
      "address": "0x26B508Afc5bdC2eEB011F68c2459ac68319e0756",
      "txHash": "0x98dfa98a8d21756957817ce3a3e59248d0cd739a53c8a2a4e3d611372f7f551d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Booster",
            "label": "masterBarista",
            "type": "t_contract(IMasterBarista)14965",
            "src": "contracts/nft/Booster.sol:36"
          },
          {
            "contract": "Booster",
            "label": "boosterConfig",
            "type": "t_contract(IBoosterConfig)21275",
            "src": "contracts/nft/Booster.sol:37"
          },
          {
            "contract": "Booster",
            "label": "latte",
            "type": "t_contract(IERC20)5366",
            "src": "contracts/nft/Booster.sol:38"
          },
          {
            "contract": "Booster",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)18787_storage))",
            "src": "contracts/nft/Booster.sol:50"
          },
          {
            "contract": "Booster",
            "label": "totalAccumBoostedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/nft/Booster.sol:52"
          },
          {
            "contract": "Booster",
            "label": "userStakingNFT",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)18792_storage))",
            "src": "contracts/nft/Booster.sol:53"
          },
          {
            "contract": "Booster",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/nft/Booster.sol:55"
          }
        ],
        "types": {
          "t_contract(IMasterBarista)14965": {
            "label": "contract IMasterBarista"
          },
          "t_contract(IBoosterConfig)21275": {
            "label": "contract IBoosterConfig"
          },
          "t_contract(IERC20)5366": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)18787_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserInfo)18787_storage)": {
            "label": "mapping(address => struct Booster.UserInfo)"
          },
          "t_struct(UserInfo)18787_storage": {
            "label": "struct Booster.UserInfo",
            "members": [
              {
                "label": "accumBoostedReward",
                "type": "t_uint256"
              },
              {
                "label": "lastUserActionTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)18792_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.NFTStakingInfo))"
          },
          "t_mapping(t_address,t_struct(NFTStakingInfo)18792_storage)": {
            "label": "mapping(address => struct Booster.NFTStakingInfo)"
          },
          "t_struct(NFTStakingInfo)18792_storage": {
            "label": "struct Booster.NFTStakingInfo",
            "members": [
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3305_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3305_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3040_storage"
              }
            ]
          },
          "t_struct(Set)3040_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "69ca94a4fdff25d2579756521e72c4154c90a2c449952d8f773f9c1a16b71a41": {
      "address": "0xb9DC48f8f0671f163751bd72602718eC08032dA5",
      "txHash": "0x283f439dbf00618d85c570379bb98f34a091e57990b7f6533fb11434217111d5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Booster",
            "label": "masterBarista",
            "type": "t_contract(IMasterBarista)14965",
            "src": "contracts/nft/Booster.sol:36"
          },
          {
            "contract": "Booster",
            "label": "boosterConfig",
            "type": "t_contract(IBoosterConfig)21387",
            "src": "contracts/nft/Booster.sol:37"
          },
          {
            "contract": "Booster",
            "label": "latte",
            "type": "t_contract(IERC20)5366",
            "src": "contracts/nft/Booster.sol:38"
          },
          {
            "contract": "Booster",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)18787_storage))",
            "src": "contracts/nft/Booster.sol:50"
          },
          {
            "contract": "Booster",
            "label": "totalAccumBoostedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/nft/Booster.sol:52"
          },
          {
            "contract": "Booster",
            "label": "userStakingNFT",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)18792_storage))",
            "src": "contracts/nft/Booster.sol:53"
          },
          {
            "contract": "Booster",
            "label": "nftStaker",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_address))",
            "src": "contracts/nft/Booster.sol:54"
          },
          {
            "contract": "Booster",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/nft/Booster.sol:56"
          }
        ],
        "types": {
          "t_contract(IMasterBarista)14965": {
            "label": "contract IMasterBarista"
          },
          "t_contract(IBoosterConfig)21387": {
            "label": "contract IBoosterConfig"
          },
          "t_contract(IERC20)5366": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)18787_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserInfo)18787_storage)": {
            "label": "mapping(address => struct Booster.UserInfo)"
          },
          "t_struct(UserInfo)18787_storage": {
            "label": "struct Booster.UserInfo",
            "members": [
              {
                "label": "accumBoostedReward",
                "type": "t_uint256"
              },
              {
                "label": "lastUserActionTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)18792_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.NFTStakingInfo))"
          },
          "t_mapping(t_address,t_struct(NFTStakingInfo)18792_storage)": {
            "label": "mapping(address => struct Booster.NFTStakingInfo)"
          },
          "t_struct(NFTStakingInfo)18792_storage": {
            "label": "struct Booster.NFTStakingInfo",
            "members": [
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_address))": {
            "label": "mapping(address => mapping(uint256 => address))"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3305_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3305_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3040_storage"
              }
            ]
          },
          "t_struct(Set)3040_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "06270840b455c467dd9ac955c96f151bcaf4e02ca75c3cfe61d8cd77ee59891d": {
      "address": "0xE3f1E2735f2120e1E56b05b6C92f96FB60aA40F1",
      "txHash": "0xf1e751165914b6dd30baba4b85489214d59e1b0c51739883043befebe278cecc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:23"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/introspection/ERC165Upgradeable.sol:59"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_holderTokens",
            "type": "t_mapping(t_address,t_struct(UintSet)3426_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenOwners",
            "type": "t_struct(UintToAddressMap)2803_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:43"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:46"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:49"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:52"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_baseURI",
            "type": "t_string_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:55"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)41_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:485"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ERC721PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721PausableUpgradeable.sol:38"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "LatteNFT",
            "label": "_tokenIds",
            "type": "t_struct(Counter)7044_storage",
            "src": "contracts/nft/LatteNFT.sol:28"
          },
          {
            "contract": "LatteNFT",
            "label": "_categoryIds",
            "type": "t_struct(Counter)7044_storage",
            "src": "contracts/nft/LatteNFT.sol:31"
          },
          {
            "contract": "LatteNFT",
            "label": "latteNames",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/nft/LatteNFT.sol:34"
          },
          {
            "contract": "LatteNFT",
            "label": "categoryInfo",
            "type": "t_mapping(t_uint256,t_struct(Category)20476_storage)",
            "src": "contracts/nft/LatteNFT.sol:36"
          },
          {
            "contract": "LatteNFT",
            "label": "latteNFTToCategory",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "contracts/nft/LatteNFT.sol:38"
          },
          {
            "contract": "LatteNFT",
            "label": "_categoryToLatteNFTList",
            "type": "t_mapping(t_uint256,t_struct(UintSet)8041_storage)",
            "src": "contracts/nft/LatteNFT.sol:40"
          },
          {
            "contract": "LatteNFT",
            "label": "_tokenURIs",
            "type": "t_mapping(t_uint256,t_string_storage)",
            "src": "contracts/nft/LatteNFT.sol:42"
          }
        ],
        "types": {
          "t_struct(Counter)7044_storage": {
            "label": "struct Counters.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_string_storage)": {
            "label": "mapping(uint256 => string)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_mapping(t_uint256,t_struct(Category)20476_storage)": {
            "label": "mapping(uint256 => struct LatteNFT.Category)"
          },
          "t_struct(Category)20476_storage": {
            "label": "struct LatteNFT.Category",
            "members": [
              {
                "label": "name",
                "type": "t_string_storage"
              },
              {
                "label": "categoryURI",
                "type": "t_string_storage"
              },
              {
                "label": "timestamp",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_mapping(t_uint256,t_struct(UintSet)8041_storage)": {
            "label": "mapping(uint256 => struct EnumerableSet.UintSet)"
          },
          "t_struct(UintSet)8041_storage": {
            "label": "struct EnumerableSet.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)7655_storage"
              }
            ]
          },
          "t_struct(Set)7655_storage": {
            "label": "struct EnumerableSet.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3305_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3305_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3040_storage"
              }
            ]
          },
          "t_struct(Set)3040_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(UintSet)3426_storage)": {
            "label": "mapping(address => struct EnumerableSetUpgradeable.UintSet)"
          },
          "t_struct(UintSet)3426_storage": {
            "label": "struct EnumerableSetUpgradeable.UintSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3040_storage"
              }
            ]
          },
          "t_struct(UintToAddressMap)2803_storage": {
            "label": "struct EnumerableMapUpgradeable.UintToAddressMap",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Map)2485_storage"
              }
            ]
          },
          "t_struct(Map)2485_storage": {
            "label": "struct EnumerableMapUpgradeable.Map",
            "members": [
              {
                "label": "_entries",
                "type": "t_array(t_struct(MapEntry)2477_storage)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_struct(MapEntry)2477_storage)dyn_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry[]"
          },
          "t_struct(MapEntry)2477_storage": {
            "label": "struct EnumerableMapUpgradeable.MapEntry",
            "members": [
              {
                "label": "_key",
                "type": "t_bytes32"
              },
              {
                "label": "_value",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)41_storage": {
            "label": "uint256[41]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "8b4627953d307d3d8465e6c315dbe794c14f381b4c0ccaaa68d809b14ba69603": {
      "address": "0xFcCa3d535aB089A0211bEb01158a69cF95cC061e",
      "txHash": "0xcfa62683aceabfe3d988d4800201a0f1277e73771caf7ba38cc926d6735337f5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "BoosterConfig",
            "label": "energyInfo",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(BoosterEnergyInfo)21178_storage))",
            "src": "contracts/nft/BoosterConfig.sol:47"
          },
          {
            "contract": "BoosterConfig",
            "label": "boosterNftAllowance",
            "type": "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))",
            "src": "contracts/nft/BoosterConfig.sol:49"
          },
          {
            "contract": "BoosterConfig",
            "label": "stakeTokenAllowance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/nft/BoosterConfig.sol:51"
          },
          {
            "contract": "BoosterConfig",
            "label": "callerAllowance",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/nft/BoosterConfig.sol:53"
          }
        ],
        "types": {
          "t_mapping(t_address,t_mapping(t_uint256,t_struct(BoosterEnergyInfo)21178_storage))": {
            "label": "mapping(address => mapping(uint256 => struct BoosterConfig.BoosterEnergyInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_struct(BoosterEnergyInfo)21178_storage)": {
            "label": "mapping(uint256 => struct BoosterConfig.BoosterEnergyInfo)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(BoosterEnergyInfo)21178_storage": {
            "label": "struct BoosterConfig.BoosterEnergyInfo",
            "members": [
              {
                "label": "maxEnergy",
                "type": "t_uint256"
              },
              {
                "label": "currentEnergy",
                "type": "t_uint256"
              },
              {
                "label": "boostBps",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_mapping(t_uint256,t_bool)))": {
            "label": "mapping(address => mapping(address => mapping(uint256 => bool)))"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "11caef2fa29216e17ecd97b508310d78c9e1831fb3158c794568c015b301085c": {
      "address": "0x15A3BF1e0D9faeD9e70c2a34646A3dcd19B599E9",
      "txHash": "0x09c648a57d0aa4febaabe6836cf45b480a97b2f1c11c0bb4a1012bf653b98e5d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Booster",
            "label": "masterBarista",
            "type": "t_contract(IMasterBarista)15346",
            "src": "contracts/nft/Booster.sol:39"
          },
          {
            "contract": "Booster",
            "label": "boosterConfig",
            "type": "t_contract(IBoosterConfig)22592",
            "src": "contracts/nft/Booster.sol:40"
          },
          {
            "contract": "Booster",
            "label": "latte",
            "type": "t_contract(IERC20Upgradeable)1097",
            "src": "contracts/nft/Booster.sol:41"
          },
          {
            "contract": "Booster",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)20045_storage))",
            "src": "contracts/nft/Booster.sol:53"
          },
          {
            "contract": "Booster",
            "label": "totalAccumBoostedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/nft/Booster.sol:55"
          },
          {
            "contract": "Booster",
            "label": "userStakingNFT",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)20050_storage))",
            "src": "contracts/nft/Booster.sol:56"
          },
          {
            "contract": "Booster",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/nft/Booster.sol:58"
          }
        ],
        "types": {
          "t_contract(IMasterBarista)15346": {
            "label": "contract IMasterBarista"
          },
          "t_contract(IBoosterConfig)22592": {
            "label": "contract IBoosterConfig"
          },
          "t_contract(IERC20Upgradeable)1097": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)20045_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserInfo)20045_storage)": {
            "label": "mapping(address => struct Booster.UserInfo)"
          },
          "t_struct(UserInfo)20045_storage": {
            "label": "struct Booster.UserInfo",
            "members": [
              {
                "label": "accumBoostedReward",
                "type": "t_uint256"
              },
              {
                "label": "lastUserActionTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)20050_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.NFTStakingInfo))"
          },
          "t_mapping(t_address,t_struct(NFTStakingInfo)20050_storage)": {
            "label": "mapping(address => struct Booster.NFTStakingInfo)"
          },
          "t_struct(NFTStakingInfo)20050_storage": {
            "label": "struct Booster.NFTStakingInfo",
            "members": [
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3719_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3719_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3454_storage"
              }
            ]
          },
          "t_struct(Set)3454_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b989d0a4f8c593b4c8afc43d34d77022e0f8ff0b2f48c7d8df22505a7868801d": {
      "address": "0xEFd6c75bC6bEC22CD54cA673faf2B9e7ac97247A",
      "txHash": "0xc0ea3752af8fec39500454ce77d25b9e916bfa0a99d776f6aceaa1f9869d90b1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:28"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol:96"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)39_storage)",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:225"
          },
          {
            "contract": "Booster",
            "label": "masterBarista",
            "type": "t_contract(IMasterBarista)15341",
            "src": "contracts/nft/Booster.sol:39"
          },
          {
            "contract": "Booster",
            "label": "boosterConfig",
            "type": "t_contract(IBoosterConfig)22611",
            "src": "contracts/nft/Booster.sol:40"
          },
          {
            "contract": "Booster",
            "label": "latte",
            "type": "t_contract(IERC20Upgradeable)1097",
            "src": "contracts/nft/Booster.sol:41"
          },
          {
            "contract": "Booster",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)20039_storage))",
            "src": "contracts/nft/Booster.sol:53"
          },
          {
            "contract": "Booster",
            "label": "totalAccumBoostedReward",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "contracts/nft/Booster.sol:55"
          },
          {
            "contract": "Booster",
            "label": "userStakingNFT",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)20044_storage))",
            "src": "contracts/nft/Booster.sol:56"
          },
          {
            "contract": "Booster",
            "label": "_IN_EXEC_LOCK",
            "type": "t_uint256",
            "src": "contracts/nft/Booster.sol:58"
          }
        ],
        "types": {
          "t_contract(IMasterBarista)15341": {
            "label": "contract IMasterBarista"
          },
          "t_contract(IBoosterConfig)22611": {
            "label": "contract IBoosterConfig"
          },
          "t_contract(IERC20Upgradeable)1097": {
            "label": "contract IERC20Upgradeable"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)20039_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.UserInfo))"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_struct(UserInfo)20039_storage)": {
            "label": "mapping(address => struct Booster.UserInfo)"
          },
          "t_struct(UserInfo)20039_storage": {
            "label": "struct Booster.UserInfo",
            "members": [
              {
                "label": "accumBoostedReward",
                "type": "t_uint256"
              },
              {
                "label": "lastUserActionTime",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(NFTStakingInfo)20044_storage))": {
            "label": "mapping(address => mapping(address => struct Booster.NFTStakingInfo))"
          },
          "t_mapping(t_address,t_struct(NFTStakingInfo)20044_storage)": {
            "label": "mapping(address => struct Booster.NFTStakingInfo)"
          },
          "t_struct(NFTStakingInfo)20044_storage": {
            "label": "struct Booster.NFTStakingInfo",
            "members": [
              {
                "label": "nftAddress",
                "type": "t_address"
              },
              {
                "label": "nftTokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_bytes32,t_struct(RoleData)39_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)39_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_struct(AddressSet)3719_storage"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_struct(AddressSet)3719_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)3454_storage"
              }
            ]
          },
          "t_struct(Set)3454_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6276b898054552e0907ab5f3961b706c09503205bcf9b526eed50f45bbd9d324": {
      "address": "0xfa6E624c050FeC33BaDFdDa568D4d9B26Ffa3375",
      "txHash": "0x13cf7df3c4927b509bd23b8e2dc8f9408bf5c38db2062d260d8cae45f696ffcc",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:20"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:74"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:37"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol:67"
          },
          {
            "contract": "MasterBarista",
            "label": "latte",
            "type": "t_contract(ILATTE)15209",
            "src": "contracts/farm/MasterBarista.sol:41"
          },
          {
            "contract": "MasterBarista",
            "label": "bean",
            "type": "t_contract(IBeanBag)15116",
            "src": "contracts/farm/MasterBarista.sol:43"
          },
          {
            "contract": "MasterBarista",
            "label": "devAddr",
            "type": "t_address",
            "src": "contracts/farm/MasterBarista.sol:45"
          },
          {
            "contract": "MasterBarista",
            "label": "devFeeBps",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:46"
          },
          {
            "contract": "MasterBarista",
            "label": "lattePerBlock",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:48"
          },
          {
            "contract": "MasterBarista",
            "label": "bonusMultiplier",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:50"
          },
          {
            "contract": "MasterBarista",
            "label": "bonusEndBlock",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:52"
          },
          {
            "contract": "MasterBarista",
            "label": "bonusLockUpBps",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:54"
          },
          {
            "contract": "MasterBarista",
            "label": "pools",
            "type": "t_struct(List)15380_storage",
            "src": "contracts/farm/MasterBarista.sol:59"
          },
          {
            "contract": "MasterBarista",
            "label": "poolInfo",
            "type": "t_mapping(t_address,t_struct(PoolInfo)12465_storage)",
            "src": "contracts/farm/MasterBarista.sol:61"
          },
          {
            "contract": "MasterBarista",
            "label": "userInfo",
            "type": "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)12454_storage))",
            "src": "contracts/farm/MasterBarista.sol:63"
          },
          {
            "contract": "MasterBarista",
            "label": "totalAllocPoint",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:65"
          },
          {
            "contract": "MasterBarista",
            "label": "startBlock",
            "type": "t_uint256",
            "src": "contracts/farm/MasterBarista.sol:67"
          },
          {
            "contract": "MasterBarista",
            "label": "stakeTokenCallerAllowancePool",
            "type": "t_mapping(t_address,t_bool)",
            "src": "contracts/farm/MasterBarista.sol:70"
          },
          {
            "contract": "MasterBarista",
            "label": "stakeTokenCallerContracts",
            "type": "t_mapping(t_address,t_struct(List)15380_storage)",
            "src": "contracts/farm/MasterBarista.sol:73"
          }
        ],
        "types": {
          "t_contract(ILATTE)15209": {
            "label": "contract ILATTE"
          },
          "t_contract(IBeanBag)15116": {
            "label": "contract IBeanBag"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(List)15380_storage": {
            "label": "struct LinkList.List",
            "members": [
              {
                "label": "llSize",
                "type": "t_uint256"
              },
              {
                "label": "next",
                "type": "t_mapping(t_address,t_address)"
              }
            ]
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)"
          },
          "t_mapping(t_address,t_struct(PoolInfo)12465_storage)": {
            "label": "mapping(address => struct MasterBarista.PoolInfo)"
          },
          "t_struct(PoolInfo)12465_storage": {
            "label": "struct MasterBarista.PoolInfo",
            "members": [
              {
                "label": "allocPoint",
                "type": "t_uint256"
              },
              {
                "label": "lastRewardBlock",
                "type": "t_uint256"
              },
              {
                "label": "accLattePerShare",
                "type": "t_uint256"
              },
              {
                "label": "accLattePerShareTilBonusEnd",
                "type": "t_uint256"
              },
              {
                "label": "allocBps",
                "type": "t_uint256"
              }
            ]
          },
          "t_mapping(t_address,t_mapping(t_address,t_struct(UserInfo)12454_storage))": {
            "label": "mapping(address => mapping(address => struct MasterBarista.UserInfo))"
          },
          "t_mapping(t_address,t_struct(UserInfo)12454_storage)": {
            "label": "mapping(address => struct MasterBarista.UserInfo)"
          },
          "t_struct(UserInfo)12454_storage": {
            "label": "struct MasterBarista.UserInfo",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "rewardDebt",
                "type": "t_uint256"
              },
              {
                "label": "bonusDebt",
                "type": "t_uint256"
              },
              {
                "label": "fundedBy",
                "type": "t_address"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_struct(List)15380_storage)": {
            "label": "mapping(address => struct LinkList.List)"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
